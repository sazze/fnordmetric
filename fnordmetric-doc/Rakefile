require "rubygems"
require "bundler"
require "yaml"

Bundler.setup
Bundler.require

BASEDIR = File.expand_path("../", __FILE__)
CONFIG = YAML.load(IO.read(File.join(BASEDIR, "config.yml")))

require "rack/test"
require "sinatra/base"
require "sinatra_static"
require "redcarpet"
require 'digest/md5'

def md_pre(text)
  text.gsub!(/`([^`]+)`/, '<code>\1</code>')

  text.gsub!(/(^(?! {4}|\t)\w+_\w+_\w[\w_]*)/) do |x|
    x.gsub('_', '\_') if x.split('').sort.to_s[0..1] == '__'
  end

  text.gsub!(/( *){{{([^}]+)}}}/) do |m|
    IO.read(File.join(BASEDIR, $2)).split("\n").map do |l|
      "#{$1}#{l}"
    end.join("\n")
  end

  text
end

def md_post(html)
  html.gsub!('<pre><code>', '<pre class="prettyprint"><code>')
  html
end

class DocApp < Sinatra::Base

  set :public_folder, File.join(BASEDIR, 'web/assets')
  set :environment, :test
  set :raise_errors, true

  helpers do
    include Rack::Utils
    alias_method :h, :escape_html
  end

  get "/" do
    @yield = render(:erb, IO.read(File.join(BASEDIR, 'web/index.erb')))
    render_with_layout
  end

  get "/screenshots" do
    @title = "Screenshots"
    @yield = render(:erb, IO.read(File.join(BASEDIR, 'web/screenshots.erb')))
    render_with_layout
  end

  ["/documentation", "/documentation/*"].each do |route|
    get route do
      params[:splat] ||= ["index"]
      @route = "/#{params[:splat] * "/"}"

      page = CONFIG["sitemap"].values.flatten.find{ |p| p["url"] == @route }
      @title = "#{page["title"]} | Documentation" if page

      renderer = Redcarpet::Markdown.new(
        Redcarpet::Render::HTML.new(:no_link => true))
      @doc_yield = md_post(renderer.render(md_pre(IO.read(
        File.join(BASEDIR, "src#{@route}.md")))))
      @yield = render(:erb, IO.read(File.join(BASEDIR, 'web/documentation.erb')))
      render_with_layout
    end
  end

  def render_with_layout
    render :erb, IO.read(File.join(BASEDIR, 'web/layout.erb'))
  end

end

desc "clean"
task :clean do
  puts "Cleaning up..."
  %x{rm -rf #{BASEDIR}/target}
end

desc "build"
task :build do
  puts "-"*50
  puts "ProTip (TM):\n    $ cd target && python -m SimpleHTTPServer 9090"
  puts "-"*50
  puts nil

  puts "+ Build: FnordMetric Documentation"
  Rake::Task["render"].invoke
  puts "+ Build complete :)"
end

task :render do
  puts "+ Rendering Markdown to HTML"
  builder = SinatraStatic.new(DocApp)
  target = File.join(BASEDIR, "target")

  routes = %w{/ /documentation /documentation/support
    /documentation/license /documentation/downloads /screenshots
    /documentation/examples/fm_classic_simple_example
    /documentation/examples/fm_classic_full_example}

  CONFIG["sitemap"].values.flatten.each do |page|
    routes << "/documentation#{page["url"]}"
  end

  routes.each do |path|
    puts "  + #{path}"
    builder.send(:build_path, path, target)
  end

  puts "+ Copying Assets"
  %x{cp -R #{BASEDIR}/web/assets/* #{BASEDIR}/target}
  %x{cp -R #{BASEDIR}/web/assets/.htaccess #{BASEDIR}/target}
  %x{cp -R #{BASEDIR}/downloads #{BASEDIR}/target/}
end

task :publish do
  exec "rsync -vr target/ fnordmetric.io:fnordmetric.io"
end

task :default do
  puts "usage: rake [command]"
  puts <<-EOU
  build     # build the static html docs
  clean     # delete all generated files
  publish   # publish to fnordmetric.io
  EOU
end
